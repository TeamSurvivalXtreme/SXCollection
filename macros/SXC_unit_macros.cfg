#textdomain wesnoth-SXC

# Following macro spawns enemy unit known in SX as moving boss at nearest valid hex to the given coordinates.
# This macro is universal for all moving bosses. They can either drop chest with gold, items or nothing on
# their death. Using this macro sets the variable units_index and that easily allows modifying other things
# that are not incuded in this main definition for this unit by filtering it with it's id, which is set as
# Boss_$unit_index until the next usage of this macro. Usage:
# ITEM - can be either CHEST_GOLD for bosses dropping chest with gold, item name, i.e. RESRING, DEFRING or
#        YELLOW_POTION (see item macros for more possible items) or NOTHING for bosses dropping nothing on
#        their death
# GOLD - amount of gold in chest, otherwise set to 0
# X Y - map hex coordinates where this boss should spawn
# TYPE - unit type
# SIDE - side under which this boss belongs
# MP - maximum movement points adjustment, set to 0 when unit has to have it's original movement, can be
#      both possitive or negative. Never set it's value to lower value than 1-(units max. original movement)
# HP - maximum health points adjustment, the specified value is added to unit's default hp value
# MA - adjusting of unit's melee weapons strikes (attacks) per round
# MD - adjusting of unit's melee weapons damage per strike
# RA - adjusting of unit's ranged weapons strikes (attacks) per round
# RD - adjusting of unit's ranged weapons damage per strike
# RES - unit's resistance adjustment, can be only positive and increases all unit's resistances at once by
#       specified value
# W1 W2 W3 W4 - can be used for adding another weapon to unit's default weapons. Uses special predefined
#               weapon macros and can be only set to following values: MA, MB, MC, MF, MI, MP, RA, RB, RC,
#               RF, RI or RP for weapons (first character represents range and second damage type) or BLANK,
#               for all unused slots
#
# NOTICE: Most of these values are common also for another macros, so I will only write description for new
#         parameters or when they will act differently against other used values
#
#define SXC_ENEMY_BOSS ITEM GOLD X Y TYPE SIDE MP HP MA MD RA RD RES W1 W2 W3 W4
  {VARIABLE_OP units_index add 1}
  {SXC_ENEMY_MB_2 $units_index {X} {Y} {TYPE} {SIDE} {MP} {HP} {MA} {MD} {RA} {RD} {RES} {W1} {W2} {W3} {W4}}
  {VARIABLE mvbindex $moving_bosses.length}
  {VARIABLE moving_bosses[$mvbindex|].id Boss_$units_index}
  {VARIABLE moving_bosses[$mvbindex|].type {ITEM}}
  {VARIABLE moving_bosses[$mvbindex|].amount {GOLD}}
  {CLEAR_VARIABLE mvbindex}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_MB_2 ID X Y TYPE SIDE MP HP MA MD RA RD RES W1 W2 W3 W4
  [unit]
    x={X}
    y={Y}
    type={TYPE}
    side={SIDE}
    role=boss
    name=Boss
    id=Boss_{ID}
    unrenamable=yes
    {SXC_ENEMY_UNIT_MODIFICATIONS increase {MP} {HP} {MA} {MD} {RA} {RD} {RES} {W1} {W2} {W3} {W4} {TRAIT_SXC_LOYAL} {BLANK}}
    # Modified from the standard IS_HERO macro to give a red crown
    [+modifications]
        [object]
            [effect]
                apply_to=overlay
                add="misc/hero-icon.png~CS(100,-35,-45)"
            [/effect]
            [effect]
                apply_to=ellipse
                ellipse="misc/ellipse-hero"
            [/effect]
        [/object]
    [/modifications]
  [/unit]
#enddef

# Following macro spawns enemy unit that acts as guard. It can be static guard or moving guard depending on
# used parameters in the macro. Moving guards never move from defined location until they can attack.
# MP - sets maximum movement to specified value
# MF - movement factor - can be M or S, M means the unit has it's original movement costs, S means that the
#      unit will be static
# TERRAIN - for static guards, this will allow the guard to move in one specified terrain type, i.e. castle
#         for guards in entrances or near boss. When you don't want to allow this or when you specify M as
#         movement factor, set this parameter to none. NOTICE: This parameter must be specified without ""
# When you need guard with more changed terrains, set these 2 parameters as M none and use separate macro
# SXC_ENEMY_GUARD_MOVEMENT_COSTS to modify unit's terrain movement costs
#
#define SXC_ENEMY_GUARD_3 MF TERRAIN X Y TYPE SIDE MP HP MA MD RA RD RES W1 W2 W3 W4
  [unit]
    x={X}
    y={Y}
    type={TYPE}
    side={SIDE}
    name=Guard
    role=guard
    ai_special=guardian
    unrenamable=yes
    {SXC_ENEMY_UNIT_MODIFICATIONS set {MP} {HP} {MA} {MD} {RA} {RD} {RES} {W1} {W2} {W3} {W4} {TRAIT_LOYAL_HERO} ({SXC_ENEMY_{MF} {TERRAIN}})}
  [/unit]
#enddef

# This unit uses same settings as SXC_ENEMY_LEADER_3, except that he has not set canrecruit=yes
# and his recruitment is controlled with macros filtering his position and id and his units are
# controlled by specified side ai
# ID - any number between 0 and 999. Never use numbers higher or equal to 1000 because they are
#      used autoatically for moving bosses. I suggest to use number 10 and higher in sequentional
#      order (same number for respawned fake leader if the previous fake leader is dead) and use
#      this id (for 10 in this macro is id=Boss_10) in other macros controlling the recruitment.
# SIDE - normal AI side used for controlling units of the fake side
#define SXC_ENEMY_FAKE_LEADER ID X Y TYPE SIDE HP MA MD RA RD RES W1 W2 W3 W4
  {VARIABLE fs_side_{ID} {SIDE}}
  {VARIABLE fs_x_{ID} {X}}
  {VARIABLE fs_y_{ID} {Y}}
  [unit]
    x={X}
    y={Y}
    type={TYPE}
    side={SIDE}
    role=fake_boss
    generate_name=yes
    goto_x={X}
    goto_y={Y}
    unrenamable=yes
    id=Boss_{ID}
    overlays="misc/leader-expendable.png"
    {SXC_ENEMY_UNIT_MODIFICATIONS set 1 {HP} {MA} {MD} {RA} {RD} {RES} {W1} {W2} {W3} {W4} {TRAIT_SXC_LOYAL} {BLANK}}
  [/unit]
#enddef

# This macro is used to spawn new enemy leader when the previous one is dead.
#
#define SXC_ENEMY_LEADER_3 X Y TYPE SIDE HP MA MD RA RD RES W1 W2 W3 W4
  [unit]
    x={X}
    y={Y}
    type={TYPE}
    canrecruit=yes
    side={SIDE}
    role=big_boss
    generate_name=yes
    goto_x={X}
    goto_y={Y}
    unrenamable=yes
    {SXC_ENEMY_UNIT_MODIFICATIONS set 1 {HP} {MA} {MD} {RA} {RD} {RES} {W1} {W2} {W3} {W4} {BLANK} {BLANK}}
  [/unit]

  [event]
    name=side {SIDE} turn
    first_time_only=no
    [if]
      [have_unit]
        role=big_boss
        side={SIDE}
        x,y={X},{Y}
      [/have_unit]
      [then]
        [object]
          silent=yes
          duration=forever
          [filter]
            role=big_boss
            side={SIDE}
            x,y={X},{Y}
          [/filter]
          [effect]
            apply_to=movement
            set=0
          [/effect]
        [/object]
      [/then]
    [/if]
  [/event]
#enddef

# This macro is used to define enemy side and initial leader for standard SX maps: Usage:
# SIDE - side number
# GOLD - initial gold for this side
# INCOME - income per turn for this side
# ADJUSTMENTS - other adjustments for this side, i.e. initial leader's name, side color and so on
# RECRUIT - initial recruit list for this side
# TYPE - unit type of the initial leader
#
#define SXC_ENEMY_SIDE SIDE GOLD INCOME RECRUIT ADJUSTMENTS TYPE HP MA MD RA RD RES W1 W2 W3 W4
  [side]
    allow_player=no
    canrecruit=yes
    controller=ai
    color_lock=true
    disallow_observers=yes
    faction="Custom"
    generate_name=yes
    gold={GOLD}
    hidden=yes
    income={INCOME}
    recruit={RECRUIT}
    role=big_boss
    side={SIDE}
    team_name=Enemies
    type={TYPE}
    unrenamable=yes
    village_gold=0
    {ADJUSTMENTS}
    [ai]
      aggression=1.0
      attack_depth=1
      caution=0.0
      grouping=no
      leader_aggression=-10.0
      passive_leader=no
      recruitment_diversity=3.0
      recruitment_pattern=""
      simple_targeting=yes
    [/ai]
    {SXC_ENEMY_UNIT_MODIFICATIONS set 0 {HP} {MA} {MD} {RA} {RD} {RES} {W1} {W2} {W3} {W4} {BLANK} ({SXC_ENEMY_S none})}
  [/side]
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_M TERRAIN
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_S TERRAIN
  [effect]
    apply_to=movement_costs
    replace=yes
    [movement_costs]
      castle=50
      cave=50
      deep_water=50
      flat=50
      forest=50
      frozen=50
      fungus=50
      hills=50
      impassable=50
      mountains=50
      reef=50
      sand=50
      shallow_water=50
      swamp_water=50
      unwalkable=50
      village=50
      {TERRAIN}=1
    [/movement_costs]
  [/effect]
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_MODIFICATIONS MM MP HP MA MD RA RD RES W1 W2 W3 W4 TR MC
  [modifications]
    {TRAIT_FEARLESS}
    {TR}
    [object]
      silent=yes
      duration=forever
      {SXC_ENEMY_WEAPON_{W1}}
      {SXC_ENEMY_WEAPON_{W2}}
      {SXC_ENEMY_WEAPON_{W3}}
      {SXC_ENEMY_WEAPON_{W4}}
      [effect]
        apply_to=movement
        {MM}={MP}
      [/effect]
      [effect]
        apply_to=hitpoints
        increase={HP}
        increase_total={HP}
      [/effect]
      [effect]
        apply_to=attack
        range=melee
        increase_attacks={MA}
      [/effect]
      [effect]
        apply_to=attack
        range=melee
        increase_damage={MD}
      [/effect]
      [effect]
        apply_to=attack
        range=ranged
        increase_attacks={RA}
      [/effect]
      [effect]
        apply_to=attack
        range=ranged
        increase_damage={RD}
      [/effect]
      [effect]
        apply_to=resistance
        replace=no
        [resistance]
          blade=-{RES}
          pierce=-{RES}
          impact=-{RES}
          fire=-{RES}
          cold=-{RES}
          arcane=-{RES}
        [/resistance]
      [/effect]
      {MC}
    [/object]
  [/modifications]
#enddef

# This macro is for changing specified armor type of moving bosses to defined value. Usage:
# TYPE - resistance type, i.e. arcane
# RES - new value (as displayed in game, i.e. 20 for 20% armor for arcane. It's complete armor replacement
#       for specified type of armor and is probably only needed when the armor value for one or 2 armor
#       types is too low or high against other armor types or exceeds 100%
#
#define SXC_ENEMY_BOSS_CHANGE_ARMOR TYPE RES
  {SXC_ENEMY_UNIT_CH_ARMOR (
    id=Boss_$units_index
  ) {TYPE} {RES}}
#enddef

# This macro is for changing specified armor type of fake leaders to defined value. Usage:
# TYPE - resistance type, i.e. arcane
# RES - new value (as displayed in game, i.e. 20 for 20% armor for arcane. It's complete armor replacement
#       for specified type of armor and is probably only needed when the armor value for one or 2 armor
#       types is too low or high against other armor types or exceeds 100%
#
#define SXC_ENEMY_FAKE_LEADER_CHANGE_ARMOR ID TYPE RES
  {SXC_ENEMY_UNIT_CH_ARMOR (
    id=Boss_{ID}
  ) {TYPE} {RES}}
#enddef

# This macro is for changing specified armor type of guards to defined value. It can also be used for
# recruits. Usage:
# X Y - map hex coordinates of the guard
#
#define SXC_ENEMY_GUARD_CHANGE_ARMOR X Y SIDE TYPE RES
  {SXC_ENEMY_UNIT_CH_ARMOR (
    x,y={X},{Y}
    side={SIDE}
  ) {TYPE} {RES}}
#enddef

# This macro is for changing specified armor type of enemy leaders to defined value. Usage:
# SIDE - leader's side
#
#define SXC_ENEMY_LEADER_CHANGE_ARMOR SIDE TYPE RES
  {SXC_ENEMY_UNIT_CH_ARMOR (
    side={SIDE}
    canrecruit=yes
  ) {TYPE} {RES}}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_CH_ARMOR FILTER TYPE RES
  {VARIABLE temp_armor 100}
  {VARIABLE_OP temp_armor sub {RES}}
  [object]
    silent=yes
    duration=forever
    [filter]
      {FILTER}
    [/filter]
    [effect]
      apply_to=resistance
      replace=yes
      [resistance]
        {TYPE}=$temp_armor
      [/resistance]
    [/effect]
  [/object]
  {CLEAR_VARIABLE temp_res}
#enddef

# Following macros are for adding ability to the unit. Usage:
# ABILITY - ability macro or full definition of ability as in abilities.cfg
#
#define SXC_ENEMY_BOSS_ADD_ABILITY ABILITY
  {SXC_ENEMY_UNIT_ADD_ABILITY (
    id=Boss_$units_index
  ) {ABILITY}}
#enddef

#define SXC_ENEMY_FAKE_LEADER_ADD_ABILITY ID ABILITY
  {SXC_ENEMY_UNIT_ADD_ABILITY (
    id=Boss_{ID}
  ) {ABILITY}}
#enddef

#define SXC_ENEMY_GUARD_ADD_ABILITY X Y SIDE ABILITY
  {SXC_ENEMY_UNIT_ADD_ABILITY (
    x,y={X},{Y}
    side={SIDE}
  ) {ABILITY}}
#enddef

#define SXC_ENEMY_LEADER_ADD_ABILITY SIDE ABILITY
  {SXC_ENEMY_UNIT_ADD_ABILITY (
    side={SIDE}
    canrecruit=yes
  ) {ABILITY}}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_ADD_ABILITY FILTER ABILITY
  [object]
    silent=yes
    duration=forever
    [filter]
      {FILTER}
    [/filter]
    [effect]
      apply_to=new_ability
      [abilities]
        {ABILITY}
      [/abilities]
    [/effect]
  [/object]
#enddef

# Following macros are for halo effect to the unit. Usage:
# HALO - HALO image
#
#define SXC_ENEMY_BOSS_HALO HALO
  {SXC_ENEMY_UNIT_HALO (
    id=Boss_$units_index
  ) {HALO}}
#enddef

#define SXC_ENEMY_FAKE_LEADER_HALO ID HALO
  {SXC_ENEMY_UNIT_HALO (
    id=Boss_{ID}
  ) {HALO}}
#enddef

#define SXC_ENEMY_GUARD_HALO X Y SIDE HALO
  {SXC_ENEMY_UNIT_HALO (
    x,y={X},{Y}
    side={SIDE}
  ) {HALO}}
#enddef

#define SXC_ENEMY_LEADER_HALO SIDE HALO
  {SXC_ENEMY_UNIT_HALO (
    side={SIDE}
    canrecruit=yes
  ) {HALO}}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_HALO FILTER HALO
  [store_unit]
    [filter]
      {FILTER}
    [/filter]
    variable=halo
  [/store_unit]
  {VARIABLE halo.halo {HALO}}
  [unstore_unit]
    variable=halo
  [/unstore_unit]
  {CLEAR_VARIABLE halo}
#enddef


# Following macros are for ability removal from the unit. Usage:
# ABILITY - ability name as defined in abilities.cfg
#
#define SXC_ENEMY_BOSS_REMOVE_ABILITY ABILITY
  {SXC_ENEMY_UNIT_RM_ABILITY (
    id=Boss_$units_index
  ) {ABILITY}}
#enddef

#define SXC_ENEMY_FAKE_LEADER_REMOVE_ABILITY ID ABILITY
  {SXC_ENEMY_UNIT_RM_ABILITY (
    id=Boss_{ID}
  ) {ABILITY}}
#enddef

#define SXC_ENEMY_GUARD_REMOVE_ABILITY X Y SIDE ABILITY
  {SXC_ENEMY_UNIT_RM_ABILITY (
    x,y={X},{Y}
    side={SIDE}
  ) {ABILITY}}
#enddef

#define SXC_ENEMY_LEADER_REMOVE_ABILITY SIDE ABILITY
  {SXC_ENEMY_UNIT_RM_ABILITY (
    side={SIDE}
    canrecruit=yes
  ) {ABILITY}}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_RM_ABILITY FILTER ABILITY
  [object]
    silent=yes
    duration=forever
    [filter]
      {FILTER}
    [/filter]
    [effect]
      apply_to=remove_ability
      [abilities]
        [dummy]
          id={ABILITY}
        [/dummy]
      [/abilities]
    [/effect]
  [/object]
#enddef

# Following macros are for changing specified weapon's name, description, attack or whatever can be changed
# with apply_to=weapon in effect tag. Usage:
# INDEX - index of the weapon to affect, is counted from 0 in the order of definitions in both unit definition
#         and additional weapons in the macros. This means that first weapon will have index 0, second 1 and
#         so on. The main advantage is that map designer doesn't need to specify all the needed parameters to
#         uniquely identify weapon, because indexing does it automatically with single number as input
# CHANGE - lines with changes, i.e. set_type=arcane
#
#define SXC_ENEMY_BOSS_CHANGE_ATTACK INDEX CHANGE
  {SXC_ENEMY_UNIT_CH_ATTACK (
    id=Boss_$units_index
  ) {INDEX} {CHANGE}}
#enddef

#define SXC_ENEMY_FAKE_LEADER_CHANGE_ATTACK ID INDEX CHANGE
  {SXC_ENEMY_UNIT_CH_ATTACK (
    id=Boss_{ID}
  ) {INDEX} {CHANGE}}
#enddef

#define SXC_ENEMY_GUARD_CHANGE_ATTACK X Y SIDE INDEX CHANGE
  {SXC_ENEMY_UNIT_CH_ATTACK (
    x,y={X},{Y}
    side={SIDE}
  ) {INDEX} {CHANGE}}
#enddef

#define SXC_ENEMY_LEADER_CHANGE_ATTACK SIDE INDEX CHANGE
  {SXC_ENEMY_UNIT_CH_ATTACK (
    side={SIDE}
    canrecruit=yes
  ) {INDEX} {CHANGE}}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_CH_ATTACK FILTER INDEX CHANGE
  [store_unit]
    [filter]
      {FILTER}
    [/filter]
    variable=temp_weapons
  [/store_unit]
  [object]
    silent=yes
    duration=forever
    [filter]
      {FILTER}
    [/filter]
    [effect]
      apply_to=attack
      name=$temp_weapons.attack[{INDEX}].name
      range=$temp_weapons.attack[{INDEX}].range
      type=$temp_weapons.attack[{INDEX}].type
      {CHANGE}
    [/effect]
  [/object]
  {CLEAR_VARIABLE temp_weapons}
#enddef

# Following macros are for removing specified weapon. Usage:
#
#define SXC_ENEMY_BOSS_REMOVE_ATTACK INDEX
  {SXC_ENEMY_UNIT_RM_ATTACK (
    id=Boss_$units_index
  ) {INDEX}}
#enddef

#define SXC_ENEMY_FAKE_LEADER_REMOVE_ATTACK ID INDEX
  {SXC_ENEMY_UNIT_RM_ATTACK (
    id=Boss_{ID}
  ) {INDEX}}
#enddef

#define SXC_ENEMY_GUARD_REMOVE_ATTACK X Y SIDE INDEX
  {SXC_ENEMY_UNIT_RM_ATTACK (
    x,y={X},{Y}
    side={SIDE}
  ) {INDEX}}
#enddef

#define SXC_ENEMY_LEADER_REMOVE_ATTACK SIDE INDEX
  {SXC_ENEMY_UNIT_RM_ATTACK (
    side={SIDE}
    canrecruit=yes
  ) {INDEX}}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_RM_ATTACK FILTER INDEX
  [store_unit]
    [filter]
      {FILTER}
    [/filter]
    variable=temp_weapons
  [/store_unit]
  [object]
    silent=yes
    duration=forever
    [filter]
      {FILTER}
    [/filter]
    [effect]
      apply_to=remove_attacks
      name=$temp_weapons.attack[{INDEX}].name
      range=$temp_weapons.attack[{INDEX}].range
      type=$temp_weapons.attack[{INDEX}].type
    [/effect]
  [/object]
  {CLEAR_VARIABLE temp_weapons}
#enddef

# Following macros are for adding or replacing specials for selected weapon to the unit. Usage:
# MODE - can be append, replace or any other argument supplied by the [set_specials] tag
# SPECIAL1 SPECIAL2 - can be macro with weapon special definition, full definition or {BLANK}
#define SXC_ENEMY_BOSS_SET_SPECIALS INDEX MODE SPECIAL1 SPECIAL2
  {SXC_ENEMY_UNIT_SET_SPECIALS (
    id=Boss_$units_index
  ) {INDEX} {MODE} {SPECIAL1} {SPECIAL2}}
#enddef

#define SXC_ENEMY_FAKE_LEADER_SET_SPECIALS ID INDEX MODE SPECIAL1 SPECIAL2
  {SXC_ENEMY_UNIT_SET_SPECIALS (
    id=Boss_{ID}
  ) {INDEX} {MODE} {SPECIAL1} {SPECIAL2}}
#enddef

#define SXC_ENEMY_GUARD_SET_SPECIALS X Y SIDE INDEX MODE SPECIAL1 SPECIAL2
  {SXC_ENEMY_UNIT_SET_SPECIALS (
    x,y={X},{Y}
    side={SIDE}
  ) {INDEX} {MODE} {SPECIAL1} {SPECIAL2}}
#enddef

#define SXC_ENEMY_LEADER_SET_SPECIALS SIDE INDEX MODE SPECIAL1 SPECIAL2
  {SXC_ENEMY_UNIT_SET_SPECIALS (
    side={SIDE}
    canrecruit=yes
  ) {INDEX} {MODE} {SPECIAL1} {SPECIAL2}}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_SET_SPECIALS FILTER INDEX MODE SPECIAL1 SPECIAL2
  [store_unit]
    [filter]
      {FILTER}
    [/filter]
    variable=temp_weapons
  [/store_unit]
  [object]
    silent=yes
    duration=forever
    [filter]
      {FILTER}
    [/filter]
    [effect]
      apply_to=attack
      name=$temp_weapons.attack[{INDEX}].name
      range=$temp_weapons.attack[{INDEX}].range
      type=$temp_weapons.attack[{INDEX}].type
      [set_specials]
        mode={MODE}
        {SPECIAL1}
        {SPECIAL2}
      [/set_specials]
    [/effect]
  [/object]
  {CLEAR_VARIABLE temp_weapons}
#enddef

# Following macros can be used for complete replacement of unit's movement costs. For complete
# overview of arguments see macro SXC_ENEMY_UNIT_MOVEMENT_COSTS.
#
#define SXC_ENEMY_BOSS_MOVEMENT_COSTS CS CV DW FL FO FR FU HI IM MO RE SA SH SW UN VI
  {SXC_ENEMY_UNIT_MOVEMENT_COSTS (
    id=Boss_$units_index
  ) {CS} {CV} {DW} {FL} {FO} {FR} {FU} {HI} {IM} {MO} {RE} {SA} {SH} {SW} {UN} {VI}}
#enddef

#define SXC_ENEMY_FAKE_LEADER_MOVEMENT_COSTS ID CS CV DW FL FO FR FU HI IM MO RE SA SH SW UN VI
  {SXC_ENEMY_UNIT_MOVEMENT_COSTS (
    id=Boss_{ID}
  ) {CS} {CV} {DW} {FL} {FO} {FR} {FU} {HI} {IM} {MO} {RE} {SA} {SH} {SW} {UN} {VI}}
#enddef

#define SXC_ENEMY_GUARD_MOVEMENT_COSTS X Y SIDE CS CV DW FL FO FR FU HI IM MO RE SA SH SW UN VI
  {SXC_ENEMY_UNIT_MOVEMENT_COSTS (
    x,y={X},{Y}
    side={SIDE}
  ) {CS} {CV} {DW} {FL} {FO} {FR} {FU} {HI} {IM} {MO} {RE} {SA} {SH} {SW} {UN} {VI}}
#enddef

#define SXC_ENEMY_LEADER_MOVEMENT_COSTS SIDE CS CV DW FL FO FR FU HI IM MO RE SA SH SW UN VI
  {SXC_ENEMY_UNIT_MOVEMENT_COSTS (
    side={SIDE}
    canrecruit=yes
  ) {CS} {CV} {DW} {FL} {FO} {FR} {FU} {HI} {IM} {MO} {RE} {SA} {SH} {SW} {UN} {VI}}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_MOVEMENT_COSTS FILTER CS CV DW FL FO FR FU HI IM MO RE SA SH SW UN VI
  [object]
    silent=yes
    duration=forever
    [filter]
      {FILTER}
    [/filter]
    [effect]
      apply_to=movement_costs
      replace=yes
      [movement_costs]
        castle={CS}
        cave={CV}
        deep_water={DW}
        flat={FL}
        forest={FO}
        frozen={FR}
        fungus={FU}
        hills={HI}
        impassable={IM}
        mountains={MO}
        reef={RE}
        sand={SA}
        shallow_water={SH}
        swamp_water={SW}
        unwalkable={UN}
        village={VI}
      [/movement_costs]
    [/effect]
  [/object]
#enddef

# Following macros will make selected unit looking ghostlike
#
#define  SXC_ENEMY_BOSS_GHOSTLIKE
  {SXC_ENEMY_UNIT_GHOSTLIKE (
    id=Boss_$units_index
  )}
#enddef

#define  SXC_ENEMY_FAKE LEADER_GHOSTLIKE ID
  {SXC_ENEMY_UNIT_GHOSTLIKE (
    id=Boss_{ID}
  )}
#enddef

#define SXC_ENEMY_GUARD_GHOSTLIKE X Y SIDE
  {SXC_ENEMY_UNIT_GHOSTLIKE (
    x,y={X},{Y}
    side={SIDE}
  )}
#enddef

#define SXC_ENEMY_LEADER_GHOSTLIKE SIDE
  {SXC_ENEMY_UNIT_GHOSTLIKE (
    side={SIDE}
    canrecruit=yes
  )}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_UNIT_GHOSTLIKE FILTER
  [object]
    silent=yes
    duration=forever
    [filter]
      {FILTER}
    [/filter]
    [effect]
      apply_to=image_mod
      replace=~O(75%)
      add=~O(75%)
    [/effect]
  [/object]
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_BLANK
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_MA
  {SXC_ENEMY_WEAPON_ARCANE 5 2}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_MB
  {SXC_ENEMY_WEAPON_BLADE 5 2}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_MC
  {SXC_ENEMY_WEAPON_COLD 5 2}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_MF
  {SXC_ENEMY_WEAPON_FIRE 5 2}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_MI
  {SXC_ENEMY_WEAPON_IMPACT 5 2}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_MP
  {SXC_ENEMY_WEAPON_PIERCE 5 2}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_RA
  {SXC_ENEMY_WEAPON_ARCANE_MISSILE 8 3}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_RB
  {SXC_ENEMY_WEAPON_BLADE_MISSILE 8 3}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_RC
  {SXC_ENEMY_WEAPON_COLD_MISSILE 8 3}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_RF
  {SXC_ENEMY_WEAPON_FIRE_MISSILE 8 3}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_RI
  {SXC_ENEMY_WEAPON_IMPACT_MISSILE 8 3}
#enddef

# This macro is used internally by previous macros
#
#define SXC_ENEMY_WEAPON_RP
  {SXC_ENEMY_WEAPON_PIERCE_MISSILE 8 3}
#enddef

# This macro is used internally by previous macros
#define SXC_ENEMY_WEAPON_RAM
  [effect]
    apply_to=new_attack
    name=ram
    description=_"ram"
    type=impact
    range=melee
    damage=14
    number=3
    icon=attacks/ram.png
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=ram
      [/filter_attack]
      [frame]
        begin=-150
        end=-100
      [/frame]
      [if]
        hits=no
        [frame]
          begin=-100
          end=100
          sound={SOUND_LIST:MISS}
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=-100
          end=100
          sound=mace.wav
        [/frame]
      [/else]
      [frame]
        begin=100
        end=150
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

# Following macros are used by previous macros and also by SXC_ENEMY_UPGRADE macro for recruits
# who have not melee or ranged weapon in their default version. In this case, weapon for that
# range is selected randomly.
#
#define SXC_ENEMY_WEAPON_ARCANE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "blessed dagger"
    icon=attacks/dagger-human.png
    type=arcane
    range=melee
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "blessed dagger"
      [/filter_attack]
      [frame]
        begin=-150
        end=-100
      [/frame]
      [if]
        hits=no
        [frame]
          begin=-100
          end=100
          sound={SOUND_LIST:MISS},{SOUND_LIST:HOLY_MISS}
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=-100
          end=100
          sound=dagger-swish.wav,{SOUND_LIST:HOLY}
        [/frame]
      [/else]
      [frame]
        begin=100
        end=150
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_BLADE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "short sword"
    icon=attacks/sword-human-short.png
    type=blade
    range=melee
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "short sword"
      [/filter_attack]
      [frame]
        begin=-150
        end=-100
      [/frame]
      [if]
        hits=no
        [frame]
          begin=-100
          end=100
          sound={SOUND_LIST:MISS}
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=-100
          end=100
          sound={SOUND_LIST:SWORD_SWISH}
        [/frame]
      [/else]
      [frame]
        begin=100
        end=150
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_COLD DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "cold touch"
    icon=attacks/touch-undead.png
    type=cold
    range=melee
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "cold touch"
      [/filter_attack]
      [frame]
        begin=-150
        end=-100
      [/frame]
      [if]
        hits=no
        [frame]
          begin=-100
          end=100
          sound={SOUND_LIST:MISS}
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=-100
          end=100
          sound=wail-sml.wav
        [/frame]
      [/else]
      [frame]
        begin=100
        end=150
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_FIRE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "torch"
    icon=attacks/torch.png
    type=fire
    range=melee
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "torch"
      [/filter_attack]
      [frame]
        begin=-150
        end=-100
      [/frame]
      [if]
        hits=no
        [frame]
          begin=-100
          end=100
          sound=torch-miss.ogg
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=-100
          end=100
          sound=torch.ogg
        [/frame]
      [/else]
      [frame]
        begin=100
        end=150
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_IMPACT DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "fist"
    icon=attacks/fist.png
    type=impact
    range=melee
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "fist"
      [/filter_attack]
      [frame]
        begin=-150
        end=-100
      [/frame]
      [if]
        hits=no
        [frame]
          begin=-100
          end=100
          sound={SOUND_LIST:MISS}
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=-100
          end=100
          sound=fist.ogg
        [/frame]
      [/else]
      [frame]
        begin=100
        end=150
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_PIERCE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "pike"
    icon=attacks/pike.png
    type=pierce
    range=melee
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "pike"
      [/filter_attack]
      [frame]
        begin=-150
        end=-100
      [/frame]
      [if]
        hits=no
        [frame]
          begin=-100
          end=100
          sound=spear-miss.ogg
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=-100
          end=100
          sound=spear.ogg
        [/frame]
      [/else]
      [frame]
        begin=100
        end=150
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_ARCANE_MISSILE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "dark blessing"
    icon=attacks/magic-missile.png
    type=arcane
    range=ranged
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "dark blessing"
      [/filter_attack]
      [missile_frame]
        begin=-180
        end=0
        image="projectiles/whitemissile-n.png"
        image_diagonal="projectiles/whitemissile-ne.png"
        halo=halo/holy/halo[1~4].png
      [/missile_frame]
      [frame]
        begin=-300
        end=-225
      [/frame]
      [frame]
        begin=-225
        end=-150
      [/frame]
      [frame]
        begin=-150
        end=-75
        halo=halo/holy/halo6.png
      [/frame]
      [if]
        hits=yes
        [frame]
          begin=-75
          end=0
          sound={SOUND_LIST:HOLY}
          halo=halo/holy/halo1.png
        [/frame]
      [/if]
      [else]
        hits=no
        [frame]
          begin=-75
          end=0
          sound={SOUND_LIST:HOLY_MISS}
          halo=halo/holy/halo1.png
        [/frame]
      [/else]
      [frame]
        begin=0
        end=75
        halo=halo/holy/halo3.png
      [/frame]
      [frame]
        begin=75
        end=150
        halo=halo/holy/halo5.png
      [/frame]
      [frame]
        begin=150
        end=200
        halo=halo/holy/halo6.png
      [/frame]
      [frame]
        begin=200
        end=250
      [/frame]
      [frame]
        begin=250
        end=300
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_BLADE_MISSILE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "throwing knives"
    icon=attacks/dagger-thrown-human.png
    type=blade
    range=ranged
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "throwing knives"
      [/filter_attack]
      [missile_frame]
        begin=-150
        end=0
        image="projectiles/dagger-n.png"
        image_diagonal="projectiles/dagger-ne.png"
      [/missile_frame]
      [frame]
        begin=-225
        end=-150
      [/frame]
      [if]
        hits=yes
        [frame]
          begin=-150
          end=100
          sound=throwing-knife.ogg
        [/frame]
      [/if]
      [else]
        hits=no
        [frame]
          begin=-150
          end=100
          sound=throwing-knife-miss.ogg
        [/frame]
      [/else]
      [frame]
        begin=100
        end=175
        halo=halo/holy/halo3.png
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_COLD_MISSILE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "chill wave"
    icon=attacks/iceball.png
    type=cold
    range=ranged
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "chill wave"
      [/filter_attack]
      [missile_frame]
        begin=-150
        end=50
        image="projectiles/darkmissile-n.png"
        image_diagonal="projectiles/darkmissile-ne.png"
      [/missile_frame]
      [frame]
        begin=-225
        end=-150
        halo=halo/undead/dark-magic-1.png
        halo_x,halo_y=0,-12
      [/frame]
      [frame]
        begin=-150
        end=-75
        halo=halo/undead/dark-magic-2.png
        halo_x,halo_y=0,-12
      [/frame]
      [frame]
        begin=-75
        end=0
        halo=halo/undead/dark-magic-3.png
        halo_x,halo_y=0,-12
      [/frame]
      [frame]
        begin=0
        end=75
        halo=halo/undead/dark-magic-4.png
        halo_x,halo_y=0,-12
      [/frame]
      [frame]
        begin=75
        end=150
        halo=halo/undead/dark-magic-5.png
        halo_x,halo_y=0,-12
      [/frame]
      [if]
        hits=yes
        [frame]
          begin=150
          end=225
          halo=halo/undead/dark-magic-6.png
          halo_x,halo_y=0,-12
          sound=magic-dark.ogg
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=150
          end=225
          halo=halo/undead/dark-magic-6.png
          halo_x,halo_y=0,-12
          sound=magic-dark-miss.ogg
        [/frame]
      [/else]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_FIRE_MISSILE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "flaming dart"
    icon=attacks/torch.png
    type=fire
    range=ranged
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "flaming dart"
      [/filter_attack]
      [missile_frame]
        begin=-150
        end=0
        image="projectiles/missile-fire-n.png"
        image_diagonal="projectiles/missile-fire-ne.png"
      [/missile_frame]
      [if]
        hits=no
        [frame]
          begin=-400
          end=350
          sound={SOUND_LIST:MISS}
        [/frame]
      [/if]
      [else]
        hits=yes
        [frame]
          begin=-400
          end=350
          sound=dart.wav
        [/frame]
      [/else]
      [frame]
        begin=-350
        end=-300
      [/frame]
      [frame]
        begin=-300
        end=-250
      [/frame]
      [frame]
        begin=-250
        end=-100
      [/frame]
      [frame]
        begin=-100
        end=-50
      [/frame]
      [frame]
        begin=-50
        end=100
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_IMPACT_MISSILE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "thrown stones"
    icon=attacks/rock_thrown.png
    type=impact
    range=ranged
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "thrown stones"
      [/filter_attack]
      [missile_frame]
        begin=-100
        end=100
        image="projectiles/stone.png"
        image_diagonal="projectiles/stone.png"
      [/missile_frame]
      [frame]
        begin=-300
        end=-100
      [/frame]
      [if]
        hits=yes
        [frame]
          begin=-100
          end=100
          sound=tail.ogg
        [/frame]
      [/if]
      [else]
        hits=no
        [frame]
          begin=-100
          end=100
          sound=throw-1.wav
        [/frame]
      [/else]
      [frame]
        begin=100
        end=300
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

#define SXC_ENEMY_WEAPON_PIERCE_MISSILE DAM SRK
  [effect]
    apply_to=new_attack
    name= _ "crossbow"
    icon=attacks/crossbow-undead.png
    type=pierce
    range=ranged
    damage={DAM}
    number={SRK}
  [/effect]
  [effect]
    apply_to=new_animation
    [attack_anim]
      [filter_attack]
        name=_ "crossbow"
      [/filter_attack]
      [missile_frame]
        begin=-75
        end=75
        image="projectiles/missile-n.png"
        image_diagonal="projectiles/missile-ne.png"
      [/missile_frame]
      [frame]
        begin=-150
        end=-75
      [/frame]
      [if]
        hits=yes
        [frame]
          begin=-75
          end=75
          sound=crossbow.ogg
        [/frame]
      [/if]
      [else]
        hits=no
        [frame]
          begin=-75
          end=75
          sound=crossbow-miss.ogg
        [/frame]
      [/else]
      [frame]
        begin=75
        end=150
      [/frame]
    [/attack_anim]
  [/effect]
#enddef

# This macro defines the starting gold for fake enemy side, use the same ID as for fake leader
# Fake sides don't get any bonuses like normal sides, i.e. for killing units controlled by players,
# because their units are normally controlled by standard AI sides and it's hard to determine whether
# it belongs to normal AI side or to fake side
# This macro must be used inside an event
#define SXC_ENEMY_FAKE_SIDE_GOLD ID GOLD
  {VARIABLE fs_gold_{ID} {GOLD}}
#enddef

# This macro defines income for fake side and replaces previously set income for specified fake side
# Use the same ID as for fake leader
# This macro must be used inside an event
#define SXC_ENEMY_FAKE_SIDE_INCOME ID GOLD
  {VARIABLE fs_income_{ID} {GOLD}}
#enddef

# This macro defines the fake side recruit list. Using this macro will replace aready defined recruit
# list so it must always contain all units that should fake side recruit.
# Use the same ID as for fake leader
# This macro must be used inside an event
#define SXC_ENEMY_FAKE_SIDE_RECRUIT_LIST ID RECRUIT
  {VARIABLE fs_own_recruits_{ID} yes}
  {VARIABLE fs_recruit_{ID} {RECRUIT}}
#enddef

# This macro disables the fake side recruit list. Using this macro will cause the recruit side will use
# default recruit list of the normal AI side it's using.
# Use the same ID as for fake leader
# This macro must be used inside an event
#define SXC_ENEMY_FAKE_SIDE_RECRUIT_DEFAULT ID
  {VARIABLE fs_own_recruits_{ID} no}
#enddef

# This macro replaces the missing routines for fake side recruiting and also adds amount of gold
# defined by the macro SXC_ENEMY_FAKE_SIDE_INCOME to it's total gold. Every time when new unit is
# placed on map, the unit cost is substracted from the total gold and when it drops below 0 gold,
# recruiting is stopped until it raises back to at least 1 or more gold (it's easier to check
# 0 gold limit than to check unit cost before placing it on map and repeating the same step for
# another unit with possibly lower cost). This macro uses following parameters:
# ID - fake side ID
# FILTER - filter for the location where the "recruited" units will be placed
# Use the same ID as for fake leader
# This macro is an event so it can be placed in scenario directly
#define SXC_ENEMY_FAKE_SIDE_TURN ID FILTER
  [event]
    name=new turn
    first_time_only=no
    {VARIABLE_OP fs_gold_{ID} add $fs_income_{ID}}
    [if]
      [not]
        {SXC_CMP fs_own_recruits_{ID} equals "yes"}
      [/not]
      [then]
        [store_side]
          side=$fs_side_{ID}
          variable=recruit_side
        [/store_side]
        {VARIABLE fs_recruit_{ID} "$recruit_side.recruit"}
        {CLEAR_VARIABLE recruit_side}
      [/then]
    [/if]
    [if]
      [have_unit]
        id=Boss_{ID}
        role=fake_boss
        side=$fs_side_{ID}
      [/have_unit]
      [then]
        [store_unit]
          [filter]
            id=Boss_{ID}
            role=fake_boss
            side=$fs_side_{ID}
          [/filter]
          variable=fake_leader
        [/store_unit]
        {VARIABLE fake_leader.goto_x $fs_x_{ID}}
        {VARIABLE fake_leader.goto_y $fs_y_{ID}}
        [unstore_unit]
          variable=fake_leader
        [/unstore_unit]
        {CLEAR_VARIABLE fake_leader}
      [/then]
    [/if]
    [if]
      [have_unit]
        id=Boss_{ID}
        role=fake_boss
        side=$fs_side_{ID}
        x,y=$fs_x_{ID},$fs_y_{ID}
      [/have_unit]
      [then]
        [object]
          silent=yes
          duration=forever
          [filter]
            role=fake_boss
            id=Boss_{ID}
          [/filter]
          [effect]
            apply_to=movement
            set=0
          [/effect]
        [/object]
        [store_locations]
          variable=locations
          [and]
            {FILTER}
          [/and]
          [not]
            [filter]
            [/filter]
          [/not]
        [/store_locations]
        [set_variables]
          name=units
          [split]
            list=$fs_recruit_{ID}
            key=type
            separator=,
          [/split]
        [/set_variables]
        [while]
          {SXC_CMP fs_gold_{ID} greater_than 0}
          {SXC_CMP locations.length greater_than 0}
          [do]
            [set_variable]
              name=units_i
              rand=1..$units.length
            [/set_variable]
            {VARIABLE_OP units_i add -1}
            [set_variable]
              name=locations_i
              rand=1..$locations.length
            [/set_variable]
            {VARIABLE_OP locations_i add -1}
            [unit]
              type=$units[$units_i].type
              x,y=$locations[$locations_i].x,$locations[$locations_i].y
              side=$fs_side_{ID}
              generate_name=yes
              random_traits=yes
              to_variable=recruited_unit
            [/unit]
            {VARIABLE_OP fs_gold_{ID} sub $recruited_unit.cost}
            [unstore_unit]
              variable=recruited_unit
            [/unstore_unit]
            {CLEAR_VARIABLE recruited_unit}
            [fire_event]
              name=recruit
              [primary_unit]
                type=$units[$units_i].type
                x,y=$locations[$locations_i].x,$locations[$locations_i].y
                side=$fs_side_{ID}
              [/primary_unit]
            [/fire_event]
            {MODIFY_UNIT (
              type=$units[$units_i].type
              x,y=$locations[$locations_i].x,$locations[$locations_i].y
              side=$fs_side_{ID}
            ) role fake_recruits}
            [store_locations]
              find_in=locations
              [not]
                x,y=$locations[$locations_i].x,$locations[$locations_i].y
              [/not]
              variable=locations
            [/store_locations]
          [/do]
        [/while]
        {CLEAR_VARIABLE units,units_i,locations,locations_i}
      [/then]
    [/if]
  [/event]
#enddef
